surename
surename<-'Schlemmer'
surename
r --version
# load the data.table package (has to be installed first)
install.packages("data.table")
install.packages("lubridate")
library(lubridate)
dataFamaFrench[,date:=as.Date(paste0(year(dateHelp),"-",month(dateHelp),"-",days_in_month(dateHelp)))]
## Plotting with ggplot2
install.packages("ggplot2")
library(ggplot2)
# If we have many lines to draw and we don't want to do it by hand
# Use the melt() function from the reshape package
install.packages("reshape2")
library(reshape2)
## Quandl
install.packages("Quandl")
library(Quandl)
# Authenticate (put in your own api key)
apiKey <- "kmsLhF1sAHo2xsc7soZx"
Quandl.api_key(apiKey)
# Load StockData for Facebook
stockData_FB<-Quandl("WIKI/FB",collapse = "monthly")
# Load StockData for Facebook
stockData_FB<-Quandl("WIKI/FB",collapse = "monthly")
sapply(stockData_FB,class)
stockData_FB$Ticker<-"FB"
# Load StockData for Apple (ticker=AAPL)
stockData_APPL<-Quandl("WIKI/AAPL",collapse = "monthly")
stockData_APPL$Ticker<-"APPL"
# merge code using the rbind() function
stockData <- rbing(stockData_FB,stockData_APPL)
# merge code using the rbind() function
stockData <- rbind(stockData_FB,stockData_APPL)
stockData
# By default stockData is a data.frame --> convert to data.table (as.data.table)
date_lag_vec <- stockData$Date %m-% months(1)
day(date_lag_vec) <- days_in_month(date_lag_vec)
stockData$Date_lag <-date_lag_vec
setwd("~/05_Workspace/case-study-asset-pricing")
#load Packages
library(data.table)
library(lubridate)
#load stock data
stockdata<-fread("./data/stock_data.csv")
stockdata
#load Packages
library(data.table)
library(lubridate)
lapply(stockdata, class)
#load and formate stock data
stockdata<-fread("./data/stock_data.csv")
stockdata
lapply(stockdata, class)
#date as date
stockdata[,date:=as.Date(date,format="%Y-%m-%d")]
lapply(stockdata, class)
#use of log returns like in the paper
#create cloumn for log returns
stockdata[,log_return:=log(1+return)]
stockdata
#load and formate stock data
stockdata<-fread("./data/stock_data.csv")
#date as date
stockdata[,date:=as.Date(date,format="%Y-%m-%d")]
stockdata$log_return := log(1+stockdata$return)
stockdata$log_return = log(1+stockdata$return)
stockdata
#find formation period
#start t-12 months
formation_start<-stockdata$date %m-% months(12)
formation_start
day(formation_start)<-days_in_month(ranking_start)
day(formation_start)<-days_in_month(formation_start)
formation_start
#find formation period
#start t-12 months
formation_start<-stockdata$date %m-% months(12)
#find formation period
#start t-12 months
formation_start<-stockdata$date %m-% months(12)
stockdata$formation_start<-formation_start
stockdata
# calculate start of the formation period for each date
ranking_start<-stockdata$date %m-% months(12) # subtract twelve months
day(ranking_start)<-days_in_month(ranking_start) # set day of the date = last day of the month
stockdata$ranking_start<-ranking_start
stockdata
stockdata<-fread("./data/stock_data.csv")
stockdata
lapply(stockdata, class)
#date as date
stockdata[,date:=as.Date(date,format="%Y-%m-%d")]
lapply(stockdata, class)
#Find monthly momentum portfolio based on paper (momentum crashes)
#select momentum portfolio by:
# (i)   min 8 of 11 past return available
# (ii)  consider  t-12 to t-2 returns to formate portfolio
# (iii) rank stocks and divide in 10 decils (1st - winner, 10th - loser)
#use of log returns like in the paper
#create cloumn for log returns
stockdata$log_return = log(1+stockdata$return)
#find formation period
#start t-12 months
formation_start<-stockdata$date %m-% months(12)
stockdata$formation_start<-formation_start
#end t-2 months
formation_end<-stockdata$date %m-% months(2)
stockdata$formation_end<-formation_end
stockdata
#end t-2 months
formation_end<-stockdata$date %m-% months(1)
stockdata$formation_end<-formation_end
stockdata
no_stock <- unique(stockdata$permno)
no_stock
no_stock <- count(unique(stockdata$permno))
#install packages
install.packages("dplyr")
library(dplyr)
no_stock <- count(unique(stockdata$permno))
no_stock <- count(unique(stockdata$permno))
no_stock <- count(data.frame(unique(stockdata$permno)))
no_stock
#no. of shares in stock universe
#no_stock <- count(data.frame(unique(stockdata$permno)))
no_stock <- length(unique(stockdata$permno))
no_stock
stockdata
test <- sapply(stockdata,sum_return)
sum_return <- function(pernom_input, start_input, end_input){
sum(filter(stockdata,permno==pernom_input&&date<=start_input&&end>=end_input)$log_return)
}
test <- sapply(stockdata,sum_return)
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
stockdata
stockdata$sum_log_return <- sum_return(permno, formation_start, formation_end))
stockdata$sum_log_return <- sum_return(permno, formation_start, formation_end)
sum_return <- function(pernom_input, start_input, end_input){
sum(filter(stockdata,permno==pernom_input&&date<=start_input&&end>=end_input)$value)
}
r
stockdata$sum_log_return %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
stockdata$sum_log_return %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
sum_return <- function(pernom_input, start_input, end_input){
sum(filter(stockdata,permno==pernom_input&&date>=start_input&&end<=end_input)$value)
}
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
lapply(stockdata, class)
sum(filter(stockdata,permno==pernom_input&date>=start_input&end<=end_input)$value)
sum_return <- function(pernom_input, start_input, end_input){
sum(filter(stockdata,permno==pernom_input&date>=start_input&end<=end_input)$value)
}
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
sum_return = function(pernom_input, start_input, end_input){
sum(filter(stockdata,permno==pernom_input&date>=start_input&end<=end_input)$value)
}
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
sum_return <- function(pernom_input, start_input, end_input){
sum(filter(stockdata,permno==pernom_input&date>=start_input&end<=end_input)$value)
}
View(sum_return)
sum_return <- function(pernom_input, start_input, end_input){
sum(stockdata %>% filter(stockdata,permno==pernom_input&date>=start_input&end<=end_input)$value)
}
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
sum_return <- function(pernom_input, start_input, end_input){
sum(stockdata %>% filter(stockdata,permno==pernom_input&date>=start_input&end<=end_input)$value)
}
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
stockdata
sum_return <- function(pernom_input, start_input, end_input){
sum(stockdata %>% filter(permno==pernom_input&date>=start_input&end<=end_input)$value)
}
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
sum_return <- function(pernom_input, start_input, end_input){
sum((stockdata %>% filter(permno==pernom_input&date>=start_input&end<=end_input))$value)
}
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
sum_return <- Vectorize(sum_return)
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
sum_return <- function(permno_input, start_input, end_input){
sum((stockdata %>% filter(permno==permno_input&date>=start_input&end<=end_input))$value)
}
sum_return <- Vectorize(sum_return)
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
sum_return <- function(permno_input, start_input, end_input){
sum((stockdata %>% filter(permno==permno_input & date>=start_input & date<=end_input))$value)
}
sum_return <- Vectorize(sum_return)
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
#find number of returns in formation period
count_returns <- function(permno_input, start_input, end_input){
length((stockdata %>% filter(permno==permno_input & date>=start_input & date<=end_input)))
}
count_returns <- Vectorize(count_retruns)
stockdata %>% mutate(no_retruns = count_returns(permno, formation_start, formation_end))
stockdata
stockdata
stockdata
stockdata<-fread("./data/stock_data.csv")
stockdata
lapply(stockdata, class)
#date as date
stockdata[,date:=as.Date(date,format="%Y-%m-%d")]
lapply(stockdata, class)
#no. of shares in stock universe
#no_stock <- length(unique(stockdata$permno))
#no_stock
#Find monthly momentum portfolio based on paper (momentum crashes)
#select momentum portfolio by:
# (i)   min 8 of 11 past return available
# (ii)  consider  t-12 to t-2 returns to formate portfolio
# (iii) rank stocks and divide in 10 decils (1st - winner, 10th - loser)
#use of log returns like in the paper
#create cloumn for log returns
stockdata$log_return = log(1+stockdata$return)
#find formation period
#start t-12 months
formation_start<-stockdata$date %m-% months(12)
stockdata$formation_start<-formation_start
#end t-2 months
formation_end<-stockdata$date %m-% months(1)
stockdata$formation_end<-formation_end
#cummulate returns for formation period
#function to sum up filtered by permno, and formation period
sum_return <- function(permno_input, start_input, end_input){
sum((stockdata %>% filter(permno==permno_input & date>=start_input & date<=end_input))$value)
}
sum_return <- Vectorize(sum_return)
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
#find number of returns in formation period
count_returns <- function(permno_input, start_input, end_input){
length((stockdata %>% filter(permno==permno_input & date>=start_input & date<=end_input)))
}
count_returns <- Vectorize(count_retruns)
stockdata %>% mutate(no_retruns = count_returns(permno, formation_start, formation_end))
stockdata
stockdata
#load and formate stock data
stockdata<-fread("./data/stock_data.csv")
#load and formate stock data
stockdata<-fread("./data/stock_data.csv")
stockdata
lapply(stockdata, class)
#date as date
stockdata[,date:=as.Date(date,format="%Y-%m-%d")]
lapply(stockdata, class)
#use of log returns like in the paper
#create cloumn for log returns
stockdata$log_return = log(1+stockdata$return)
#find formation period
#start t-12 months
formation_start<-stockdata$date %m-% months(12)
stockdata$formation_start<-formation_start
#end t-2 months
formation_end<-stockdata$date %m-% months(1)
stockdata$formation_end<-formation_end
#cummulate returns for formation period
#function to sum up filtered by permno, and formation period
sum_return <- function(permno_input, start_input, end_input){
sum((stockdata %>% filter(permno==permno_input & date>=start_input & date<=end_input))$value)
}
sum_return <- Vectorize(sum_return)
stockdata %>% mutate(sum_log_return = sum_return(permno, formation_start, formation_end))
